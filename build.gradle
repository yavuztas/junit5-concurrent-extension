plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'dev.yavuztas'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    runtimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

ext {
    isRelease = !String.valueOf(project.version).toLowerCase().contains('snapshot')
    repoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
    snapshotRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    println "Inferred version ${project.version}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = rootProject.name
            version = project.version

            from components.java
            artifact sourceJar
            artifact javadocJar

            pom {
                name = 'Junit5 Concurrent Extension'
                description = 'An extension for Junit5 to execute concurrency tests with ease'
                url = 'https://github.com/yavuztas/junit5-concurrent-extension'

                scm {
                    url = 'https://github.com/yavuztas/junit5-concurrent-extension'
                    connection = 'scm:git:git://github.com/yavuztas/junit5-concurrent-extension.git'
                    developerConnection = 'scm:git:ssh://github.com/yavuztas/junit5-concurrent-extension.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'yavuztas'
                        name = 'Yavuz Tas'
                        email = 'hi@yavuztas.dev'
                    }
                }
            }
            repositories {
                maven {
                    url = "${isRelease ? repoUrl : snapshotRepoUrl}"
                    credentials {
                        username "${sonatype_user}"
                        password "${sonatype_password}"
                    }
                }
            }
        }
    }
}

signing {
    sign configurations.archives
    sign publishing.publications.mavenJava
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
